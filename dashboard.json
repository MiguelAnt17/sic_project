[{"apiVersion":"influxdata.com/v2alpha1","kind":"Label","metadata":{"name":"agitated-carver-15c007"},"spec":{"color":"#FFE480","name":"humidity"}},{"apiVersion":"influxdata.com/v2alpha1","kind":"Label","metadata":{"name":"frosty-ptolemy-15c001"},"spec":{"color":"#0b3a8d","name":"temp"}},{"apiVersion":"influxdata.com/v2alpha1","kind":"Label","metadata":{"name":"righteous-goldwasser-15c005"},"spec":{"color":"#E85B1C","name":"cooling"}},{"apiVersion":"influxdata.com/v2alpha1","kind":"Label","metadata":{"name":"sweet-burnell-15c003"},"spec":{"color":"#006f49","name":"power"}},{"apiVersion":"influxdata.com/v2alpha1","kind":"Dashboard","metadata":{"name":"vigilant-meitner-d5c001"},"spec":{"associations":[{"kind":"Label","name":"agitated-carver-15c007"},{"kind":"Label","name":"frosty-ptolemy-15c001"},{"kind":"Label","name":"righteous-goldwasser-15c005"},{"kind":"Label","name":"sweet-burnell-15c003"}],"charts":[{"axes":[{"base":"10","name":"x","scale":"linear"},{"base":"10","label":"Cooling Efficiency","name":"y","scale":"linear"}],"colorizeRows":true,"colors":[{"id":"base","name":"laser","type":"text","hex":"#00C9FF"}],"decimalPlaces":2,"height":4,"hoverDimension":"auto","kind":"Single_Stat_Plus_Line","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"Cooling","opacity":1,"orientationThreshold":100000000,"position":"overlaid","queries":[{"query":"from(bucket: \"tp2\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"cooling_efficiency\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n   |> filter(fn: (r) => r[\"sensor_id\"] == \"5\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{"colorizeRows":true,"opacity":1,"orientationThreshold":100000000,"widthRatio":1},"width":4,"widthRatio":1,"xCol":"_time","yCol":"_value"},{"axes":[{"base":"10","name":"x","scale":"linear"},{"base":"10","name":"y","scale":"linear"}],"colorizeRows":true,"colors":[{"id":"Jcby8ZGinYzyPJuGbULLh","name":"Nineteen Eighty Four","type":"scale","hex":"#31C0F6"},{"id":"CC-mQb1O-LXtEmuUqkPvh","name":"Nineteen Eighty Four","type":"scale","hex":"#A500A5"},{"id":"pOygO2BYj2s-fo46R3EnR","name":"Nineteen Eighty Four","type":"scale","hex":"#FF7E27"}],"geom":"line","height":4,"hoverDimension":"auto","kind":"Xy","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"All_Sensors","opacity":1,"orientationThreshold":100000000,"position":"overlaid","queries":[{"query":"from(bucket: \"tp2\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"cooling_efficiency\" or r[\"_measurement\"] == \"humidity\" or r[\"_measurement\"] == \"power\" or r[\"_measurement\"] == \"temperature\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n    |> filter(fn: (r) => r[\"sensor_id\"] == \"4\" or r[\"sensor_id\"] == \"5\" or r[\"sensor_id\"] == \"6\" or r[\"sensor_id\"] == \"bottom\" or r[\"sensor_id\"] == \"middle\" or r[\"sensor_id\"] == \"top\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{"colorizeRows":true,"opacity":1,"orientationThreshold":100000000,"widthRatio":1},"width":4,"widthRatio":1,"xCol":"_time","yCol":"_value","yPos":4},{"axes":[{"name":"x","scale":"linear"},{"label":"Temperatura (ÂºC)","name":"y","scale":"linear"}],"colorizeRows":true,"colors":[{"id":"lJMVevO8cFJHLOwGzO5cQ","name":"Nineteen Eighty Four","type":"scale","hex":"#31C0F6"},{"id":"ugiSOtWy8zHuieLnzJ935","name":"Nineteen Eighty Four","type":"scale","hex":"#A500A5"},{"id":"xuBOVl4XonsFB2aFy-Lgc","name":"Nineteen Eighty Four","type":"scale","hex":"#FF7E27"}],"geom":"line","height":4,"heightRatio":0.3384279475982533,"hoverDimension":"auto","kind":"Band","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"mainColumn":"mean","name":"Temperature","opacity":1,"orientationThreshold":100000000,"queries":[{"query":"from(bucket: \"tp2\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"temperature\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n   |> filter(fn: (r) => r[\"sensor_id\"] == \"bottom\" or r[\"sensor_id\"] == \"middle\" or r[\"sensor_id\"] == \"top\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"show":true,"staticLegend":{"colorizeRows":true,"heightRatio":0.3384279475982533,"show":true,"opacity":1,"orientationThreshold":100000000,"widthRatio":1},"width":4,"widthRatio":1,"xCol":"_time","yCol":"_value","yPos":8},{"colors":[{"id":"base","name":"laser","type":"text","hex":"#00C9FF"}],"decimalPlaces":2,"height":4,"kind":"Single_Stat","name":"Power","queries":[{"query":"from(bucket: \"tp2\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"power\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n    |> filter(fn: (r) => r[\"sensor_id\"] == \"4\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{},"suffix":" W","width":4,"yPos":12},{"axes":[{"base":"10","name":"x","scale":"linear"},{"base":"10","label":"Humdity (%)","name":"y","scale":"linear"}],"colorizeRows":true,"colors":[{"id":"lJMVevO8cFJHLOwGzO5cQ","name":"Nineteen Eighty Four","type":"scale","hex":"#31C0F6"},{"id":"ugiSOtWy8zHuieLnzJ935","name":"Nineteen Eighty Four","type":"scale","hex":"#A500A5"},{"id":"xuBOVl4XonsFB2aFy-Lgc","name":"Nineteen Eighty Four","type":"scale","hex":"#FF7E27"}],"geom":"line","height":4,"hoverDimension":"auto","kind":"Xy","legendColorizeRows":true,"legendOpacity":1,"legendOrientationThreshold":100000000,"name":"Humidity","opacity":1,"orientationThreshold":100000000,"position":"overlaid","queries":[{"query":"from(bucket: \"tp2\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"humidity\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n   |> filter(fn: (r) => r[\"sensor_id\"] == \"6\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"}],"staticLegend":{"colorizeRows":true,"opacity":1,"orientationThreshold":100000000,"widthRatio":1},"width":4,"widthRatio":1,"xCol":"_time","yCol":"_value","yPos":16}],"name":"SIC-TP2"}}]